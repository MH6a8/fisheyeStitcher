项目fisheyeStitcher有对应论文
https://arxiv.org/pdf/1708.05922.pdf
源代码整个流程可以分为：鱼眼镜头矫正；图像投影变换；模板匹配拼接；图像融合及扭曲为全景视频。其中图像投影变换采用了刚性移动最小二乘法，是论文介绍的主要方法之一。

1. 鱼眼镜头矫正
   主要由函数unwarp及fish2Map完成，unwarp实现展开变换，fish2Map负责提供变换参数m_map_x和m_map_y。

2. 图像投影变换
   主要函数deform，其中参数m_mls_map_x和m_mls_map_y的获取很重要，源于移动最小二乘方法。
   2.1 移动最小二乘法
       参见文件mls_rigid.m，用matlab实现了刚性的移动最小二乘法
       基本原理为，在原图像中设置控制点，然后将控制点拖移到指定位置，生成目标图像的控制点。而移动最小二乘法就是为了得到一个变换矩阵，将图像的其它像素点，根据控制点的变换过程，进行全局变换。
       换句话说，该方法的输入是原图像及目标图像的控制点位置，输出是一个变换整个图像的变换矩阵。
   2.2 视频拼接的应用
       对于空间相邻的两张视频帧，左右图像有重合部分，但是不完全匹配。此时可以将左图当作原图像，右图当作目标图像，在左图和右图的重合区域设置控制点，输入移动最小二乘法，得到一个全局变换矩阵。此后每一张左边的视频帧都可以通过该变换矩阵，变换为重合区域与右边视频帧完全匹配。

3. 模板匹配拼接
   过程较多，代码中包括Adaptive Alignment和Find matching location，基本原理可搜索模板匹配方法，大致为根据某固定模板移动原图像与目标图像重合。
   该过程中包含了写死参数，即作者根据自己使用的相机的图像尺寸限制了匹配区域，后期需要另外想办法修改。

4. 图像融合
   主要函数为blend，主要方法为alpha融合，主要作用是使缝合线过渡更加自然，见函数blendLeft和blendRight。最后输出一个全景视频帧pano。
